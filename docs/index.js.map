{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;AACoC;;;;;;;;;;;;;;;;;;;;;;;;;;;ACmBpC,IAAI,iBAAiB;AAAA,EACjB,aAAa;AAAA;AAAA,IAET,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,IAAI;AAAA,IACJ,KAAK;AAAA,EACT;AAAA,EACA,mBAAmB;AACvB;AAaA,OAAO,gBAAgB,OAAO,iBAAiB,CAAC;AAChD,OAAO,gBAAgB,kCAAI,iBAAmB,OAAO;;;;;;;;;;;;;;;;ACpC9C,MAAM,eAAe;AAAA,EAOxB,YAAY,UAAkB,kBAAsE;AANpG,SAAQ,WAA0B,CAAC;AACnC,SAAQ,eAA8C,oBAAI,IAAI;AAE9D,SAAQ,gBAAoC;AAC5C,SAAQ,gBAAwB;AAG5B,SAAK,WAAW,MAAM,KAAK,SAAS,iBAAiB,QAAQ,CAAC;AAC9D,SAAK,mBAAmB;AACxB,SAAK,WAAW,IAAI,qBAAqB,CAAC,YAAY;AAClD,cAAQ,QAAQ,WAAS;AACrB,cAAM,UAAU,MAAM;AACtB,cAAM,OAAO,KAAK,aAAa,IAAI,OAAO,KAAK;AAAA,UAC3C,aAAa,QAAQ,aAAa,sBAAsB,KAAK,WAAW,KAAK,SAAS,QAAQ,OAAO,IAAI;AAAA,UACzG,eAAe;AAAA,UACf,eAAe;AAAA,UACf,aAAa;AAAA,UACb,YAAY;AAAA,UACZ,gBAAgB;AAAA,UAChB,WAAW,CAAC;AAAA,QAChB;AACA,YAAI,MAAM,gBAAgB;AACtB,gBAAM,MAAM,YAAY,IAAI;AAC5B,gBAAM,QAAQ,MAAM,KAAK;AACzB,eAAK,iBAAiB;AACtB,cAAI,KAAK,gBAAgB,GAAG;AACxB,iBAAK,iBAAiB;AAAA,UAC1B;AACA,eAAK,gBAAgB;AACrB,cAAI,CAAC,KAAK,aAAa,IAAI,OAAO,GAAG;AACjC,iBAAK,aAAa,IAAI,SAAS,IAAI;AAAA,UACvC;AACA,cAAI,KAAK,kBAAkB;AACvB,iBAAK,iBAAiB,SAAS,IAAI;AAAA,UACvC;AAAA,QACJ;AAAA,MACJ,CAAC;AAAA,IACL,GAAG;AAAA,MACC,WAAW;AAAA,IACf,CAAC;AACD,SAAK,SAAS,QAAQ,aAAW,KAAK,SAAS,QAAQ,OAAO,CAAC;AAC/D,YAAQ,IAAI,sDAAsD;AAAA,EACtE;AAAA,EACO,iBAAgD;AACnD,WAAO,KAAK;AAAA,EAChB;AACJ;;;;;;;UCxDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNkB;AAC4C;;;AAG9D;AACA;AACA;AACA,mBAAmB,wEAAc;AACjC,+BAA+B,kBAAkB,sBAAsB,mBAAmB;AAC1F,KAAK;;AAEL,CAAC","sources":["webpack://@leuffen/tracey-lib/./index.ts","webpack://@leuffen/tracey-lib/./src/config/tracey-config.ts","webpack://@leuffen/tracey-lib/./src/tracker/section-tracker.ts","webpack://@leuffen/tracey-lib/webpack/bootstrap","webpack://@leuffen/tracey-lib/webpack/runtime/compat get default export","webpack://@leuffen/tracey-lib/webpack/runtime/define property getters","webpack://@leuffen/tracey-lib/webpack/runtime/hasOwnProperty shorthand","webpack://@leuffen/tracey-lib/webpack/runtime/make namespace object","webpack://@leuffen/tracey-lib/./docs/index.ts"],"sourcesContent":["\nimport \"./src/config/tracey-config\";\n","\n\n\nexport interface TraceyConfig {\n    breakpoints?: {\n        [key: string]: number\n    }\n\n    // How to select sections (for detailed section analytics)\n    sections_selector?: string\n\n\n}\n\n\nexport interface TraceyInterface {\n\n}\n\n\nlet tracey_default = {\n    breakpoints: {\n        // Bootstrap breakpoints\n        xs: 0,\n        sm: 576,\n        md: 768,\n        lg: 992,\n        xl: 1200,\n        xxl: 1400,\n    },\n    sections_selector: \"section\"\n} as TraceyConfig;\n\n\n\ndeclare global {\n    interface Window {\n        tracey_config: TraceyConfig\n        tracey: TraceyInterface\n    }\n}\n\n\n// Merge with existing window.tracey object\nwindow.tracey_config = window.tracey_config || {};\nwindow.tracey_config = {...tracey_default, ...window.tracey_config};\n","interface SectionData {\n    sectionName: string;\n    totalViewTime: number;\n    firstViewTime: number;\n    scrollCount: number;\n    clickCount: number;\n    mouseMoveCount: number;\n    positions: { index: number; percentage: number }[];\n}\nexport class SectionTracker {\n    private sections: HTMLElement[] = [];\n    private sectionTimes: Map<HTMLElement, SectionData> = new Map();\n    private observer: IntersectionObserver;\n    private activeSection: HTMLElement | null = null;\n    private lastTimestamp: number = 0;\n    private onChangeCallback?: (section: HTMLElement, data: SectionData) => void;\n    constructor(selector: string, onChangeCallback?: (section: HTMLElement, data: SectionData) => void) {\n        this.sections = Array.from(document.querySelectorAll(selector));\n        this.onChangeCallback = onChangeCallback;\n        this.observer = new IntersectionObserver((entries) => {\n            entries.forEach(entry => {\n                const section = entry.target as HTMLElement;\n                const data = this.sectionTimes.get(section) || {\n                    sectionName: section.getAttribute('data-tracey-sec-name') || `Section ${this.sections.indexOf(section) + 1}`,\n                    totalViewTime: 0,\n                    firstViewTime: 0,\n                    scrollCount: 0,\n                    clickCount: 0,\n                    mouseMoveCount: 0,\n                    positions: []\n                };\n                if (entry.isIntersecting) {\n                    const now = performance.now();\n                    const delta = now - this.lastTimestamp;\n                    data.totalViewTime += delta;\n                    if (data.scrollCount === 0) {\n                        data.firstViewTime += delta;\n                    }\n                    this.lastTimestamp = now;\n                    if (!this.sectionTimes.has(section)) {\n                        this.sectionTimes.set(section, data);\n                    }\n                    if (this.onChangeCallback) {\n                        this.onChangeCallback(section, data);\n                    }\n                }\n            });\n        }, {\n            threshold: 0.5\n        });\n        this.sections.forEach(section => this.observer.observe(section));\n        console.log(\"SectionTracker initialized with IntersectionObserver\");\n    }\n    public getSectionData(): Map<HTMLElement, SectionData> {\n        return this.sectionTimes;\n    }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import \"../index\";\nimport {SectionTracker} from \"../src/tracker/section-tracker\";\n\n\nconsole.log(\"index.ts loaded\");\n(()=> {\n    console.log(\"DOM loaded\");\n    const st = new SectionTracker(\"section\", 50, (section, data) => {\n        console.log(`Section ${data.sectionName} has been viewed for ${data.totalViewTime}ms`, data);\n    });\n\n})();\n"],"names":[],"sourceRoot":""}